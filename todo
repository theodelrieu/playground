code

Tests:

Write very generic functions first.
Then, regroup common stuff (e.g. custom sentinel, encoding twice)
General to every codec:

specific-to-codec things to test:

* invalid input
* size prediction
* huge files

* remove conan workspaces, create one repo per recipe
* use IterableTransformedInputAdapter everywhere except in iterator
* put seek_forward and get as private, friend iterator, change TransformedInputAdapter concept, add those two methods as specific requirements of iterator
* do not use aliases for codecs, redefine class
* add Iterable& and Iterable const& for rvalue support
* move concepts aliases in namespace mgs (+ namespace concepts)
* rename adapters -> ranges
* Keep Semiregular for TransformedInputRange, add underlying_*() methods in InputTransformer
* IterableTransformedInputAdapter -> TransformedInputRange
* Add ReadableTransformedInputRange (with read method inside)
* variable templates for every concept trait
* improve and add tests
* Use ForwardIterator with SizedSentinel, instead of RandomAccessIterator
* TransformerInputRange
* check if iterator is a forward instead of input 
* remove stream support

doc

* migrate to readthedocs
* fix documentation about '\0'
* put back runtime_error
