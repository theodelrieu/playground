code

* Support basic_istream&
* remove conan workspaces, create one repo per recipe
* add constraint in binary_to_text::basic_codec (assert iterator value_type is byte_integral)
* rename binary_to_text -> binary_to_base
* use IterableTransformedInputAdapter everywhere except in iterator
* put seek_forward and get as private, friend iterator, change TransformedInputAdapter concept, add those two methods as specific requirements of iterator
* for byte_integral, use std::numeric_limits<>::digits
* move \0 handling in codecs::basic_codec + just look at last char
* do not use aliases for codecs, redefine class
* add Iterable& and Iterable const& for rvalue support
* support std::byte, ByteIntegral -> Byte
* move concepts in mgs/concepts instead of mgs/meta/concepts
* move concepts aliases in namespace mgs (+ namespace concepts)
* rename adapters -> view
* Semiregular for TransformedInputView, add underlying_*() methods in InputTransformer
* IterableTransformedInputAdapter -> TransformedInputView
* Add ReadableTransformedInputView (with read method inside)
* do not inherit from runtime_error
* rename basic_* to *_interface, mimick C++20 ranges

doc

* move custom codec related content in separate section
* document concept-like type aliases
* CodecTraits
* Codec
* binary_to_base::EncodingTraits

* use list iterators in basic
* move predicted size in basic
* show default base64 types in basic
* remove using std::begin, add note explaining this is implicit
* use std::Same to require exact type
