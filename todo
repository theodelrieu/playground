maybe pass encoder/decoder as template template arguments?

does not make sense to have iterators specified in a codec!!

adapt test code for base64/32/16

test base_n

base_n/detail/concepts/encoding_traits.hpp

#include <mgs/base64.hpp> // umbrella

#include <mgs/base64/base64.hpp>
#include <mgs/base64url/base64url.hpp>

// codecs

mgs::codecs::base64
mgs::codecs::base64url
mgs::codecs::base64url_unpadded

// namespaces

mgs::base_n

mgs::base64
mgs::base64::detail

mgs::meta

// only things useful to everybody
mgs::detail

// classes

mgs::base_n::basic_encoder
mgs::base_n::basic_decoder
mgs::base_n::padding_policy
mgs::base_n::detail::log2

mgs::base64::basic_encoder
mgs::base64::basic_decoder
mgs::base64::alphabet
mgs::base64::url_alphabet
mgs::base64::url_unpadded_alphabet
mgs::base64::encoder_traits
mgs::base64::decoder_traits
mgs::base64::url_encoder_traits
mgs::base64::url_decoder_traits
mgs::base64::url_unpadded_encoder_traits
mgs::base64::url_unpadded_decoder_traits

mgs::base64::encoder
mgs::base64::decoder
mgs::base64::url_encoder
mgs::base64::url_decoder
mgs::base64::url_unpadded_encoder
mgs::base64::url_unpadded_decoder

mgs::codecs::basic_codec
mgs::codecs::base64
mgs::codecs::base64url
mgs::codecs::base64url_unpadded

using mgs::codecs::base64;

codecs should be a constexpr instance, not just an alias(?)

