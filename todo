refactor codecs_base tests

// codecs

mgs::base64
mgs::base64url
mgs::base64url_unpadded

using mgs::base64;

---------------

replace std::is_same with is_detected_exact

fix concept comments:

template <typename T>
concept A = B<T> && requires()... use Same where needed

maybe pass encoder/decoder as template template arguments to basic_codec??
then inherit privately from basic_codec to have different symbols (long aliases are not fun to see in stacks)

does not make sense to have iterators specified in a codec!!

// template template arguments

using mgs::base64;

auto encoder = base64::make_encoder(begin, end);

----- Maybe ----

trigger static asserts for everything??
where to put umbrella headers? mgs/pkg/pkg.hpp

base58 takes numbers, or string in reverse order...
it would change the Codec concept as well, which only deals with binary to text right now
Rename Codec to BinaryCodec?

Rename InputAdapter to BinaryInputAdapter?
Having a Numeral/Numeric Codec/InputAdapter?

iterators already embed their nature (i.e. encoding/decoding) thanks to the InputAdapter parameter.

note in doc that only sequence, associative, and unordered associative containers are supported
binary_to_text basic_encoder/basic_decoder could be refactored together...

Look again where SFINAE correctness might make sense.
